/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.ugallery;

import handlers.BMPtoJPEGImage;
import handlers.BmpHandlerCopy;
import handlers.ImageHandler;
import handlers.JPEGHandler;
import handlers.JPEGImageHandlerBN;
import handlers.JPEGImageHandlerColors;
import handlers.JPEGImageHandlerRotator;
import handlers.JPEGtoBMPImage;
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.commons.io.FilenameUtils;

/**
 *
 * @author josse
 */
public class EditorJFrame extends javax.swing.JFrame {

    /**
     * Creates new form EditorJFrame
     */
    public EditorJFrame() {
         initComponents();
        //setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setVisible(true);
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("EDITOR");    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jpgBmpCheckbox = new javax.swing.JCheckBox();
        copiaCheckbox = new javax.swing.JCheckBox();
        coloresCheckbox = new javax.swing.JCheckBox();
        modificarCheckbox = new javax.swing.JCheckBox();
        bynCheckbox = new javax.swing.JCheckBox();
        rutaLbl = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        regresarBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(41, 54, 60));

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Ruta de la Fotograf√≠a: ");

        jpgBmpCheckbox.setBackground(new java.awt.Color(41, 54, 60));
        jpgBmpCheckbox.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jpgBmpCheckbox.setForeground(new java.awt.Color(255, 255, 255));
        jpgBmpCheckbox.setText("JPG A BMP y Viceversa");

        copiaCheckbox.setBackground(new java.awt.Color(41, 54, 60));
        copiaCheckbox.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        copiaCheckbox.setForeground(new java.awt.Color(255, 255, 255));
        copiaCheckbox.setText("Copia JPEG");

        coloresCheckbox.setBackground(new java.awt.Color(41, 54, 60));
        coloresCheckbox.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        coloresCheckbox.setForeground(new java.awt.Color(255, 255, 255));
        coloresCheckbox.setText("Rojo, Verde, Azul y Sepia");

        modificarCheckbox.setBackground(new java.awt.Color(41, 54, 60));
        modificarCheckbox.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        modificarCheckbox.setForeground(new java.awt.Color(255, 255, 255));
        modificarCheckbox.setText("Modificar Imagen");

        bynCheckbox.setBackground(new java.awt.Color(41, 54, 60));
        bynCheckbox.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        bynCheckbox.setForeground(new java.awt.Color(255, 255, 255));
        bynCheckbox.setText("Blanco y Negro");

        rutaLbl.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        rutaLbl.setForeground(new java.awt.Color(255, 255, 255));

        jButton1.setBackground(new java.awt.Color(235, 73, 96));
        jButton1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Seleccionar Imagen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(235, 73, 96));
        jButton2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Ejecutar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        regresarBtn.setBackground(new java.awt.Color(154, 185, 152));
        regresarBtn.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        regresarBtn.setForeground(new java.awt.Color(255, 255, 255));
        regresarBtn.setText("REGRESAR ");
        regresarBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(154, 185, 152)));
        regresarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bynCheckbox)
                            .addComponent(coloresCheckbox)
                            .addComponent(copiaCheckbox)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rutaLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(32, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(modificarCheckbox))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(regresarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jpgBmpCheckbox)
                                .addGap(136, 136, 136)
                                .addComponent(jButton1)))
                        .addGap(0, 40, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(rutaLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jpgBmpCheckbox)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(copiaCheckbox)
                .addGap(18, 18, 18)
                .addComponent(coloresCheckbox)
                .addGap(18, 18, 18)
                .addComponent(modificarCheckbox)
                .addGap(18, 18, 18)
                .addComponent(bynCheckbox)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(regresarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void regresarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarBtnActionPerformed
        InicioJFrame pr = new InicioJFrame();
        pr.setVisible(true);
        dispose();
    }//GEN-LAST:event_regresarBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser archivo = new JFileChooser();
        int ventana= archivo.showOpenDialog(null);
        if (ventana == JFileChooser.APPROVE_OPTION){
            File file= archivo.getSelectedFile();
            rutaLbl.setText(String.valueOf(file));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (rutaLbl.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una imagen", "EDITOR", JOptionPane.WARNING_MESSAGE);
        }else if(bynCheckbox.isSelected()==false && copiaCheckbox.isSelected()==false && copiaCheckbox.isSelected()== false && jpgBmpCheckbox.isSelected()==false && coloresCheckbox.isSelected()==false && modificarCheckbox.isSelected()==false){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una de las opciones", "EDITOR", JOptionPane.WARNING_MESSAGE);
        }else{
            if (bynCheckbox.isSelected()==true) {
                File archivo = new File(rutaLbl.getText());
                String nombrearhivo = archivo.getName();
                String extension = FilenameUtils.getExtension(nombrearhivo);
                if (extension.equals("jpg")) {
                    JPEGImageHandlerBN bn = new JPEGImageHandlerBN(rutaLbl.getText());
                    try{
                       JPEGHandler.runHandler(bn); 
                       JOptionPane.showMessageDialog(null, "Imagen Editada Correctamente", "EDITOR DE BLANCO Y NEGRO", JOptionPane.INFORMATION_MESSAGE);
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                
                }else{
                    JOptionPane.showMessageDialog(null, "Debe seleccionar una imagen JPG", "EDITOR DE BLANCO Y NEGRO", JOptionPane.WARNING_MESSAGE);
                }
                
            } if(copiaCheckbox.isSelected()==true){
                File archivo = new File(rutaLbl.getText());
                String nombrearhivo = archivo.getName();
                String extension = FilenameUtils.getExtension(nombrearhivo);
                if (extension.equals("jpg")) {
                    BmpHandlerCopy copia = new BmpHandlerCopy(rutaLbl.getText());
                    try{
                       JPEGHandler.runHandler(copia); 
                       JOptionPane.showMessageDialog(null, "Imagen Copiada Correctamente", "EDITOR DE COPIA ", JOptionPane.INFORMATION_MESSAGE);
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Debe seleccionar una imagen JPG", "EDITOR DE COPIA", JOptionPane.WARNING_MESSAGE);
                }
                
            }if (jpgBmpCheckbox.isSelected()==true) {
                File archivo = new File(rutaLbl.getText());
                String nombrearhivo = archivo.getName();
                String extension = FilenameUtils.getExtension(nombrearhivo);
                if (extension.equals("jpg")) {
                    JPEGtoBMPImage convertir1 = new JPEGtoBMPImage(rutaLbl.getText());
                    try{
                       JPEGHandler.runHandler(convertir1); 
                       JOptionPane.showMessageDialog(null, "Imagen Convertida Correctamente", "EDITOR DE CONVERSI√ìN JPEG A BMP", JOptionPane.INFORMATION_MESSAGE);
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                }else if(extension.equals("bmp")){
                    BMPtoJPEGImage convertir2 = new BMPtoJPEGImage(rutaLbl.getText());
                    try{
                       JPEGHandler.runHandler(convertir2); 
                       JOptionPane.showMessageDialog(null, "Imagen Convertida Correctamente", "EDITOR DE CONVERSI√ìN BMP A JPG ", JOptionPane.INFORMATION_MESSAGE);
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                }
  
            }if (coloresCheckbox.isSelected()==true) {
                File archivo = new File(rutaLbl.getText());
                String nombrearhivo = archivo.getName();
                String extension = FilenameUtils.getExtension(nombrearhivo);
                if (extension.equals("jpg")) {
                     JPEGImageHandlerColors colores = new JPEGImageHandlerColors(rutaLbl.getText());
                    try{
                       JPEGHandler.runHandler(colores); 
                       JOptionPane.showMessageDialog(null, "Filtros aplicados Correctamente", "EDITOR DE COLORES ", JOptionPane.INFORMATION_MESSAGE);
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Debe seleccionar una imagen JPG", "EDITOR DE COLORES", JOptionPane.WARNING_MESSAGE);
                }
            }if (modificarCheckbox.isSelected()==true) {
                File archivo = new File(rutaLbl.getText());
                String nombrearhivo = archivo.getName();
                String extension = FilenameUtils.getExtension(nombrearhivo);
                if (extension.equals("jpg")) {
                    JPEGImageHandlerRotator rotar = new JPEGImageHandlerRotator(rutaLbl.getText());
                    try{
                       JPEGHandler.runHandler(rotar); 
                       JOptionPane.showMessageDialog(null, "Imagen Rotada Correctamente", "EDITOR DE ROTACI√ìN", JOptionPane.INFORMATION_MESSAGE);
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Debe seleccionar una imagen JPG", "EDITOR DE ROTACI√ìN", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
            
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditorJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox bynCheckbox;
    private javax.swing.JCheckBox coloresCheckbox;
    private javax.swing.JCheckBox copiaCheckbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox jpgBmpCheckbox;
    private javax.swing.JCheckBox modificarCheckbox;
    private javax.swing.JButton regresarBtn;
    private javax.swing.JLabel rutaLbl;
    // End of variables declaration//GEN-END:variables
}
